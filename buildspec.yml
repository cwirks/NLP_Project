version: 0.2

env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  secrets-manager:
      DOCKERHUB_USERNAME: dockerhub:username
      DOCKERHUB_PASSWORD: dockerhub:password
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
       docker: latest
       python: 3.8
    commands:
      - sudo yum update -y
      - sudo yum install git -y
      - sudo yum install yum-utils -y
      - sudo yum install docker -y
      - sudo service docker start
      - sudo usermod -a -G docker ec2-user
      - sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
      - sudo mv /usr/local/bin/docker-compose /usr/bin/docker-compose

      - sudo chmod +x /usr/bin/docker-compose
      - docker-compose version
  pre_build:
    commands:
      - echo logging in docker hub
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
  build:
    commands:
      - sudo systemctl start docker
      - docker pull cwirks01/nlp_project:latest
      - git clone https://${NTC_TOKEN}@github.com/cwirks01/NLP_Project.git
      - sudo cd NLP_Project
      - sudo docker network create nlp_project_default
      - sudo docker-compose build --build-arg NTC_TOKEN="$(echo $NTC_TOKEN)"
#      - sudo PHP_REPOSITORY_URI=$(cat imageDetail.json | python3 -c "import sys, json; print(json.load(sys.stdin)['ImageURI'].split('@')[0])")
#      - sudo IMAGE_TAG=$(cat imageDetail.json | python3 -c "import sys, json; print(json.load(sys.stdin)['ImageTags'][0])")
#      - echo $PHP_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
#      - echo Writing image definitions file...
#      - sudo printf '[{"name":"container","imageUri":"%s"}]' $PHP_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - sudo docker-compose up -d
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
#  files:
#    - imagedefinitions.json
#cache:
  #paths:
    # - paths